{"version":3,"sources":["webpack:///./src/components/pages/LoginPage.vue","webpack:///./src/components/pages/LoginPage.vue?e24e"],"names":["id","class","user","type","data","email","validate","data-test","errors","password","error","index","key","login","disabled","computed","this","$store","state","methods","validator","fails","all","passes","post","then","response","console","log","authenticated","commit","$router","push","render"],"mappings":"4IACOA,GAAG,gB,SACYA,GAAG,a,EACnB,eAAc,UAAV,SAAK,G,EACT,eAGQ,SAHDC,MAAM,YAAW,iFAGxB,G,iBAES,Y,SAS4BA,MAAM,oB,iBAKlC,e,SAS+BA,MAAM,oB,0DA/BlD,eAuDM,MAvDN,EAuDM,CAtDQ,EAAAC,K,wCAAZ,eAqDM,MArDN,EAqDM,CApDJ,EACA,EAIA,eAaM,YAZJ,eAQQ,c,iBANN,eAKE,SAJAC,KAAK,O,qDACI,EAAAC,KAAKC,MAAK,IACd,OAAI,8BAAE,EAAAC,UAAA,EAAAA,SAAA,qBACXC,YAAU,e,mBAFD,EAAAH,KAAKC,WAKP,EAAAG,QAAU,EAAAA,OAAOH,O,iBAA5B,eAEM,MAFN,EAA4D,+B,wBAI9D,eAaM,YAZJ,eAQQ,c,iBANN,eAKE,SAJAF,KAAK,W,qDACI,EAAAC,KAAKK,SAAQ,IACjB,OAAI,8BAAE,EAAAH,UAAA,EAAAA,SAAA,qBACXC,YAAU,kB,mBAFD,EAAAH,KAAKK,cAKP,EAAAD,QAAU,EAAAA,OAAOC,U,iBAA5B,eAEM,MAFN,EAA+D,kC,yBAKvD,EAAAD,QAAW,EAAAA,OAAOH,OAAU,EAAAG,OAAOC,S,wCAA7C,eAQK,S,mBAPH,eAMK,2BAJsB,EAAAD,QAAM,SAAvBE,EAAOC,G,wBAFjB,eAMK,MALHV,MAAM,mBAELW,IAAKD,G,eAEHD,GAAK,M,SAIZ,eAOS,UANF,QAAK,8BAAE,EAAAG,OAAA,EAAAA,MAAA,qBACLC,SAAU,EAAAN,OACjBR,GAAG,cACHO,YAAU,gBACX,UAED,qB,qCASS,GACbH,KADa,WAEX,MAAO,CAGLA,KAAM,CACJC,MAAO,mBACPI,SAAU,YAEZD,OAAQ,OAGZO,SAAU,CACRb,KADQ,WAEN,OAAOc,KAAKC,OAAOC,MAAMhB,OAG7BiB,QAAS,CACPb,SADO,WAEL,IAAIc,EAAY,IAAI,IAAUJ,KAAKZ,KAAM,CACvCC,MAAO,WACPI,SAAU,aASZ,OANIW,EAAUC,QACZL,KAAKR,OAASY,EAAUZ,OAAOc,MAE/BN,KAAKR,OAAS,KAGTY,EAAUG,UAEnBV,MAfO,WAeC,WACN,OAAMW,KAAK,QAASR,KAAKZ,MAAMqB,MAAK,SAACC,GACnCC,QAAQC,IAAIF,GACRA,EAAStB,KAAKyB,eAChB,EAAKZ,OAAOa,OAAO,UAAWJ,EAAStB,KAAKF,MAC5C,EAAK6B,QAAQC,KAAK,cAElB,EAAKxB,OAASkB,EAAStB,KAAKI,aCnGtC,EAAOyB,OAASA,EAED","file":"js/chunk-2d0e14cc.723fd6b0.js","sourcesContent":["<template>\n  <div id=\"account-page\">\n    <div v-if=\"!user\" id=\"loginForm\">\n      <h1>Login</h1>\n      <small class=\"formHelp\">\n        (Form is prefilled for demonstration purposes; remove in final\n        application)\n      </small>\n      <div>\n        <label>\n          Email:\n          <input\n            type=\"text\"\n            v-model=\"data.email\"\n            v-on:blur=\"validate\"\n            data-test=\"email-input\"\n          />\n        </label>\n        <div v-if=\"errors && errors.email\" class=\"negativeFeedback\">\n          Please check your email.\n        </div>\n      </div>\n      <div>\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            v-model=\"data.password\"\n            v-on:blur=\"validate\"\n            data-test=\"password-input\"\n          />\n        </label>\n        <div v-if=\"errors && errors.password\" class=\"negativeFeedback\">\n          Please check your password.\n        </div>\n      </div>\n\n      <ul v-if=\"errors && !errors.email && !errors.password\">\n        <li\n          class=\"negativeFeedback\"\n          v-for=\"(error, index) in errors\"\n          :key=\"index\"\n        >\n          {{ error }}\n        </li>\n      </ul>\n\n      <button\n        v-on:click=\"login\"\n        v-bind:disabled=\"errors\"\n        id=\"loginButton\"\n        data-test=\"login-button\"\n      >\n        Login\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { axios } from \"@/common/app.js\";\nimport Validator from \"validatorjs\";\n\nexport default {\n  data() {\n    return {\n      // Form is prefilled for demonstration purposes; remove in final application\n      // jill@harvard.edu/asdfasdf is one of our seed users from e28api/seeds/user.json\n      data: {\n        email: \"jill@harvard.edu\",\n        password: \"asdfasdf\",\n      },\n      errors: null,\n    };\n  },\n  computed: {\n    user() {\n      return this.$store.state.user;\n    },\n  },\n  methods: {\n    validate() {\n      let validator = new Validator(this.data, {\n        email: \"required\",\n        password: \"required\",\n      });\n\n      if (validator.fails()) {\n        this.errors = validator.errors.all();\n      } else {\n        this.errors = null;\n      }\n\n      return validator.passes();\n    },\n    login() {\n      axios.post(\"login\", this.data).then((response) => {\n        console.log(response);\n        if (response.data.authenticated) {\n          this.$store.commit(\"setUser\", response.data.user);\n          this.$router.push(\"/favorite\");\n        } else {\n          this.errors = response.data.errors;\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n","import { render } from \"./LoginPage.vue?vue&type=template&id=481a000f\"\nimport script from \"./LoginPage.vue?vue&type=script&lang=js\"\nexport * from \"./LoginPage.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}